// 1.875m reaction wheel. Supports IndicatorLights, if installed.

+PART[advSasModule] {
	@name = reactionWheel_1p5
	@node_stack_top = 0, 0.1990267, 0, 0.0, 1.0, 0.0, 2
	@node_stack_bottom = 0, -0.1990267, 0, 0.0, -1.0, 0.0, 2
	@entryCost = 9000
	@cost = 1600
	@mass = 0.15
	@title = #MissingHistory_reactionWheel_1p5_title
	@description = #MissingHistory_reactionWheel_1p5_desc
	@bulkheadProfiles = size1p5

	@MODULE[ModuleReactionWheel] {
		@PitchTorque = 20
		@YawTorque = 20
		@RollTorque = 20
		torqueResponseSpeed = 20
		-RESOURCE[ElectricCharge] {}
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.5
		}
	}

	// Original part uses a mesh, so add model node to rescale.
	MODEL:NEEDS[!ReStock] { // without ReStock use stock 1.25 wheel
		model = Squad/Parts/Command/inlineAdvancedStabilizer/model
		scale = 1.5, 1, 1.5
	}
	MODEL:NEEDS[ReStock] { // with ReStock use its 1.875 wheel
		model = ReStockPlus/Assets/Control/restock-reactionwheel-1875-1
		scale = 1.0, 1.0, 1.0
	}
}

// The part is created before IL runs, so we have to
// do a complete IL setup after IL is loaded
@PART[reactionWheel_1p5]:AFTER[IndicatorLights] {

	//-------------------------------------------------------------------------
	// INDICATOR MESHES
	//-------------------------------------------------------------------------

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.5, 0.5, 1
		position = -0.663, 0, 0.663
		rotation = 0, -45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.5, 0.5, 1
		position = 0.663, 0, -0.663
		rotation = 0, 135, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.5, 0.5, 1
		position = 0.663, 0, 0.663
		rotation = 0, 45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.5, 0.5, 1
		position = -0.663, 0, -0.663
		rotation = 0, 215, 0
	}


	//-------------------------------------------------------------------------
	// CONTROLLABLE EMISSIVES
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/squareLamp
		emissiveName = indicator
	}


	//-------------------------------------------------------------------------
	// CONTROLLERS
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleReactionWheelIndicator
		emissiveName = indicator
	}
}